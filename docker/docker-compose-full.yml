version: '3.8'

services:
  # Traefik - Reverse Proxy & Load Balancer
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=your-email@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_le:/letsencrypt
    networks:
      - web
    depends_on:
      - app

  # Your FastAPI Application
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: faster-app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`app.localhost`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=8000"
    env_file:
      - .env
    depends_on:
      - redis
      - supabase-db
      - supabase-auth
    volumes:
      - ../:/app
    networks:
      - web
      - backend

  # Redis
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend

  # Supabase Database (PostgreSQL)
  supabase-db:
    image: supabase/postgres:15.1.0.147
    container_name: supabase-db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - supabase_db_data:/var/lib/postgresql/data
    networks:
      - backend

  # Supabase Auth (GoTrue)
  supabase-auth:
    image: supabase/gotrue:v2.164.0
    container_name: supabase-auth
    depends_on:
      - supabase-db
    environment:
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://postgres:postgres@supabase-db:5432/postgres?search_path=auth
      GOTRUE_SITE_URL: http://app.localhost
      GOTRUE_URI_ALLOW_LIST: "*"
      GOTRUE_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long
      GOTRUE_JWT_EXP: 3600
      GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
      GOTRUE_EXTERNAL_PHONE_ENABLED: "true"
      GOTRUE_SMS_AUTOCONFIRM: "true"
      GOTRUE_MAILER_URLPATHS_INVITE: /auth/verify
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: /auth/verify
      GOTRUE_MAILER_URLPATHS_RECOVERY: /auth/verify
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: /auth/verify
    networks:
      - backend

  # Supabase API Gateway (Kong)
  supabase-kong:
    image: kong:2.8
    container_name: supabase-kong
    depends_on:
      - supabase-auth
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,SRV,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl
    volumes:
      - "./kong.yml:/var/lib/kong/kong.yml:ro"
    ports:
      - "8000:8000"
      - "8443:8443"
    networks:
      - backend

volumes:
  redis_data:
  supabase_db_data:
  traefik_le:

networks:
  web:
    driver: bridge
  backend:
    driver: bridge